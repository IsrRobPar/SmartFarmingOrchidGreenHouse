Index: src/main/java/GreenHouseClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import com.example.grpc.humiditySensor.*;\r\nimport com.example.grpc.temperatureSensor.*;\r\nimport com.example.grpc.fanStatus.*;\r\nimport io.grpc.ManagedChannel;\r\nimport io.grpc.ManagedChannelBuilder;\r\nimport io.grpc.stub.StreamObserver;\r\nimport java.util.Scanner;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic class GreenHouseClient {\r\n    private final ManagedChannel channel;\r\n    private final HumiditySensorServiceGrpc.HumiditySensorServiceStub stub;\r\n    private final TemperatureSensorServiceGrpc.TemperatureSensorServiceStub stub2;\r\n   // private final StreamingTemperatureFanStatusGrpc.StreamingTemperatureFanStatusStub stub3;\r\n\r\n\r\n    public GreenHouseClient(String host, int port) {\r\n        this.channel = ManagedChannelBuilder.forAddress(host, port)\r\n                .usePlaintext()\r\n                .build();\r\n        this.stub = HumiditySensorServiceGrpc.newStub(channel);\r\n        this.stub2 = TemperatureSensorServiceGrpc.newStub(channel);\r\n       // this.stub3 = StreamingTemperatureFanStatusGrpc.newStub(channel);\r\n    }\r\n\r\n    //HUMIDITY SERVER SERVICE\r\n    public void getCurrentHumidity(double humidity) {\r\n        UnaryHumidityRequest request = UnaryHumidityRequest.newBuilder()\r\n                .setHumidity(humidity)\r\n                .build();\r\n        stub.getCurrentHumidity(request, new StreamObserver<UnaryHumidityResponse>() {\r\n            @Override\r\n            public void onNext(UnaryHumidityResponse response) {\r\n                System.out.println(\"HUMIDITY: \" + response.getMessage());\r\n            }\r\n\r\n            @Override\r\n            public void onError(Throwable t) {\r\n                System.err.println(\"Error in unary request: \" + t.getMessage());\r\n            }\r\n\r\n            @Override\r\n            public void onCompleted() {\r\n                System.out.println(\"Unary request completed\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public void streamHumidityRequest() {\r\n        StreamObserver<StreamHumidityResponse> responseObserver = new StreamObserver<StreamHumidityResponse>() {\r\n            @Override\r\n            public void onNext(StreamHumidityResponse response) {\r\n                System.out.println(\"HUMIDITY Streaming: \" + response.getMessage());\r\n            }\r\n\r\n            @Override\r\n            public void onError(Throwable t) {\r\n                System.err.println(\"Error in server streaming: \" + t.getMessage());\r\n            }\r\n\r\n            @Override\r\n            public void onCompleted() {\r\n                System.out.println(\"Server streaming completed\");\r\n            }\r\n        };\r\n        stub.streamCurrentHumidity(StreamHumidityRequest.newBuilder().setHumidity(50).build(), responseObserver);\r\n\r\n    }\r\n\r\n    //TEMPERATURE SERVER SERVICE\r\n    public void getCurrentTemperature(int temperature) {\r\n        UnaryTemperatureRequest request = UnaryTemperatureRequest.newBuilder()\r\n                .setTemperature(temperature)\r\n                .build();\r\n        stub2.getCurrentTemperature(request, new StreamObserver<UnaryTemperatureResponse>() {\r\n            @Override\r\n            public void onNext(UnaryTemperatureResponse response) {\r\n                System.out.println(\"TEMPERATURE: \" + response.getMessage());\r\n            }\r\n\r\n            @Override\r\n            public void onError(Throwable t) {\r\n                System.err.println(\"Error in unary request: \" + t.getMessage());\r\n            }\r\n\r\n            @Override\r\n            public void onCompleted() {\r\n                System.out.println(\"Unary request completed\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public void streamTemperatureRequest() {\r\n        StreamObserver<StreamTemperatureResponse> responseObserver = new StreamObserver<StreamTemperatureResponse>() {\r\n            @Override\r\n            public void onNext(StreamTemperatureResponse response) {\r\n                System.out.println(\"TEMPERATURE \" + response.getMessage());\r\n            }\r\n\r\n            @Override\r\n            public void onError(Throwable t) {\r\n                System.err.println(\"Error in server streaming: \" + t.getMessage());\r\n            }\r\n\r\n            @Override\r\n            public void onCompleted() {\r\n                System.out.println(\"Server streaming completed\");\r\n            }\r\n        };\r\n        stub2.streamCurrentTemperature(StreamTemperatureRequest.newBuilder().setTemperature(50).build(), responseObserver);\r\n\r\n    }\r\n\r\n    //FAN STATUS SERVICE\r\n\r\n\r\n\r\n    //MAIN\r\n    public static void main(String[] args) {\r\n        GreenHouseClient client = new GreenHouseClient(\"localhost\", 28001);\r\n        client.getCurrentTemperature(50);\r\n        client.streamTemperatureRequest();\r\n\r\n        GreenHouseClient client2 = new GreenHouseClient(\"localhost\", 28002);\r\n        client2.getCurrentHumidity(50);\r\n        client2.streamHumidityRequest();\r\n\r\n       // GreenHouseClient client3 = new GreenHouseClient(\"localhost\", 28100);\r\n        //client3.getCurrentHumidity(50);\r\n\r\n        Scanner scanner = new Scanner(System.in);\r\n        while (true) {\r\n            System.out.println(\"Press 'Q' to quit\");\r\n            String input = scanner.nextLine();\r\n            if (input.equalsIgnoreCase(\"Q\")) {\r\n                client.shutdown();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public void shutdown() {\r\n        try {\r\n            channel.shutdown().awaitTermination(5, TimeUnit.SECONDS);\r\n        } catch (InterruptedException e) {\r\n            System.err.println(\"Error while shutting down client: \" + e.getMessage());\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/GreenHouseClient.java b/src/main/java/GreenHouseClient.java
--- a/src/main/java/GreenHouseClient.java	(revision c633835427d782098621de776adee00214d54eff)
+++ b/src/main/java/GreenHouseClient.java	(date 1713529748224)
@@ -11,7 +11,6 @@
     private final ManagedChannel channel;
     private final HumiditySensorServiceGrpc.HumiditySensorServiceStub stub;
     private final TemperatureSensorServiceGrpc.TemperatureSensorServiceStub stub2;
-   // private final StreamingTemperatureFanStatusGrpc.StreamingTemperatureFanStatusStub stub3;
 
 
     public GreenHouseClient(String host, int port) {
@@ -20,11 +19,10 @@
                 .build();
         this.stub = HumiditySensorServiceGrpc.newStub(channel);
         this.stub2 = TemperatureSensorServiceGrpc.newStub(channel);
-       // this.stub3 = StreamingTemperatureFanStatusGrpc.newStub(channel);
     }
 
     //HUMIDITY SERVER SERVICE
-    public void getCurrentHumidity(double humidity) {
+    public void getCurrentHumidity(int humidity) {
         UnaryHumidityRequest request = UnaryHumidityRequest.newBuilder()
                 .setHumidity(humidity)
                 .build();
@@ -91,10 +89,10 @@
     }
 
     public void streamTemperatureRequest() {
-        StreamObserver<StreamTemperatureResponse> responseObserver = new StreamObserver<StreamTemperatureResponse>() {
+        StreamObserver<StreamTemperatureRequest> responseObserver = new StreamObserver<StreamTemperatureRequest>() {
             @Override
-            public void onNext(StreamTemperatureResponse response) {
-                System.out.println("TEMPERATURE " + response.getMessage());
+            public void onNext(StreamTemperatureRequest response) {
+                System.out.println("TEMPERATURE " + response.getTemperature());
             }
 
             @Override
@@ -107,12 +105,9 @@
                 System.out.println("Server streaming completed");
             }
         };
-        stub2.streamCurrentTemperature(StreamTemperatureRequest.newBuilder().setTemperature(50).build(), responseObserver);
+        stub2.streamCurrentTemperature(StreamTemperatureResponse.newBuilder().setTemperature(50).build(), responseObserver);
 
     }
-
-    //FAN STATUS SERVICE
-
 
 
     //MAIN
@@ -125,9 +120,6 @@
         client2.getCurrentHumidity(50);
         client2.streamHumidityRequest();
 
-       // GreenHouseClient client3 = new GreenHouseClient("localhost", 28100);
-        //client3.getCurrentHumidity(50);
-
         Scanner scanner = new Scanner(System.in);
         while (true) {
             System.out.println("Press 'Q' to quit");
Index: src/main/java/TemperatureSensorServer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import com.example.grpc.temperatureSensor.*;\r\nimport io.grpc.Server;\r\nimport io.grpc.ServerBuilder;\r\nimport io.grpc.stub.StreamObserver;\r\nimport java.io.IOException;\r\nimport java.time.LocalDateTime;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.Random;\r\n\r\npublic class TemperatureSensorServer extends TemperatureSensorServiceGrpc.TemperatureSensorServiceImplBase{\r\n    private final Random random = new Random();\r\n\r\n    private int randomTemperature() {\r\n        return (random.nextInt(10));\r\n\r\n    }\r\n\r\n    int temperature = randomTemperature();\r\n\r\n    @Override\r\n    public void getCurrentTemperature(UnaryTemperatureRequest request, StreamObserver<UnaryTemperatureResponse> responseObserver) {\r\n        String message = \" is: \" + temperature + \"Â°C Current time: \" + LocalDateTime.now();\r\n        UnaryTemperatureResponse response = UnaryTemperatureResponse.newBuilder()\r\n                .setMessage(message)\r\n                .build();\r\n        responseObserver.onNext(response);\r\n        responseObserver.onCompleted();\r\n    }\r\n\r\n    @Override\r\n    public void streamCurrentTemperature(StreamTemperatureRequest request, StreamObserver<StreamTemperatureResponse> responseObserver) {\r\n        Runnable streamingTask = () -> {\r\n            try {\r\n                while (!Thread.currentThread().isInterrupted()) {\r\n                    String message = \" is: \" + temperature + \"Â°C. Current time: \" + LocalDateTime.now();\r\n                    StreamTemperatureResponse response = StreamTemperatureResponse.newBuilder()\r\n                            .setMessage(message)\r\n                            .build();\r\n                    responseObserver.onNext(response);\r\n                    Thread.sleep(10000); // Stream every 10 seconds\r\n                }\r\n            } catch (InterruptedException e) {\r\n                Thread.currentThread().interrupt();\r\n            } finally {\r\n                responseObserver.onCompleted();\r\n            }\r\n        };\r\n\r\n        Thread streamingThread = new Thread(streamingTask);\r\n        streamingThread.start();\r\n    }\r\n\r\n    public static void main(String[] args) throws IOException, InterruptedException {\r\n        TemperatureSensorServer server = new TemperatureSensorServer();\r\n        Server grpcServer = ServerBuilder.forPort(28001)\r\n                .addService(server)\r\n                .build();\r\n\r\n        grpcServer.start();\r\n        System.out.println(\"Server started, listening on port 28001\");\r\n\r\n        // Graceful shutdown\r\n        Runtime.getRuntime().addShutdownHook(new Thread(() -> {\r\n            System.out.println(\"Shutting down Temperature Sensor Server Server\");\r\n            try {\r\n                grpcServer.shutdown().awaitTermination(30, TimeUnit.SECONDS);\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }));\r\n\r\n        grpcServer.awaitTermination();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/TemperatureSensorServer.java b/src/main/java/TemperatureSensorServer.java
--- a/src/main/java/TemperatureSensorServer.java	(revision c633835427d782098621de776adee00214d54eff)
+++ b/src/main/java/TemperatureSensorServer.java	(date 1713529748206)
@@ -11,7 +11,7 @@
     private final Random random = new Random();
 
     private int randomTemperature() {
-        return (random.nextInt(10));
+        return (random.nextInt(100));
 
     }
 
Index: src/main/java/HumiditySensorServer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import com.example.grpc.humiditySensor.*;\r\nimport io.grpc.Server;\r\nimport io.grpc.ServerBuilder;\r\nimport io.grpc.stub.StreamObserver;\r\nimport java.io.IOException;\r\nimport java.time.LocalDateTime;\r\nimport java.util.concurrent.TimeUnit;\r\nimport java.util.Random;\r\n\r\npublic class HumiditySensorServer extends HumiditySensorServiceGrpc.HumiditySensorServiceImplBase {\r\n\r\n    private final Random random = new Random();\r\n\r\n    private double randomHumidity() {\r\n        return random.nextDouble() * 100;\r\n    }\r\n\r\n    double humidity = randomHumidity();\r\n\r\n    @Override\r\n    public void getCurrentHumidity(UnaryHumidityRequest request, StreamObserver<UnaryHumidityResponse> responseObserver) {\r\n        String message = \" is: \" + humidity + \"%. Current time: \" + LocalDateTime.now();\r\n        UnaryHumidityResponse response = UnaryHumidityResponse.newBuilder()\r\n                .setMessage(message)\r\n                .build();\r\n        responseObserver.onNext(response);\r\n        responseObserver.onCompleted();\r\n    }\r\n\r\n    @Override\r\n    public void streamCurrentHumidity(StreamHumidityRequest request, StreamObserver<StreamHumidityResponse> responseObserver) {\r\n        Runnable streamingTask = () -> {\r\n            try {\r\n                while (!Thread.currentThread().isInterrupted()) {\r\n                    String message = \" is: \" + humidity + \"%. Current time: \" + LocalDateTime.now();\r\n                    StreamHumidityResponse response = StreamHumidityResponse.newBuilder()\r\n                            .setMessage(message)\r\n                            .build();\r\n                    responseObserver.onNext(response);\r\n                    Thread.sleep(10000); // Stream every 10 seconds\r\n                }\r\n            } catch (InterruptedException e) {\r\n                Thread.currentThread().interrupt();\r\n            } finally {\r\n                responseObserver.onCompleted();\r\n            }\r\n        };\r\n\r\n        Thread streamingThread = new Thread(streamingTask);\r\n        streamingThread.start();\r\n    }\r\n\r\n    public static void main(String[] args) throws IOException, InterruptedException {\r\n        HumiditySensorServer server = new HumiditySensorServer();\r\n        Server grpcServer = ServerBuilder.forPort(28002)\r\n                .addService(server)\r\n                .build();\r\n\r\n        grpcServer.start();\r\n        System.out.println(\"Server started, listening on port 28002\");\r\n\r\n        // Graceful shutdown\r\n        Runtime.getRuntime().addShutdownHook(new Thread(() -> {\r\n            System.out.println(\"Shutting down Humidity Sensor Server\");\r\n            try {\r\n                grpcServer.shutdown().awaitTermination(30, TimeUnit.SECONDS);\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace(System.err);\r\n            }\r\n        }));\r\n\r\n        grpcServer.awaitTermination();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/HumiditySensorServer.java b/src/main/java/HumiditySensorServer.java
--- a/src/main/java/HumiditySensorServer.java	(revision c633835427d782098621de776adee00214d54eff)
+++ b/src/main/java/HumiditySensorServer.java	(date 1713523127970)
@@ -12,7 +12,7 @@
     private final Random random = new Random();
 
     private double randomHumidity() {
-        return random.nextDouble() * 100;
+        return random.nextInt(100);
     }
 
     double humidity = randomHumidity();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1bbd2568-0184-47c8-810c-e60558882b9f\" name=\"Changes\" comment=\"PROTO fanStatus.proto\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/FanStatusServer.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/GreenHouseClient.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/GreenHouseClient.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/HumiditySensorServer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/HumiditySensorServer.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/TemperatureSensorServer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/TemperatureSensorServer.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/humiditySensor/StreamHumidityRequest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/humiditySensor/StreamHumidityRequest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/humiditySensor/StreamHumidityRequestOrBuilder.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/humiditySensor/StreamHumidityRequestOrBuilder.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/humiditySensor/humidityProto.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/humiditySensor/humidityProto.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/StreamTemperatureRequest.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/StreamTemperatureRequestOrBuilder.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/StreamTemperatureResponse.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/StreamTemperatureResponseOrBuilder.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/TemperatureSensorServiceGrpc.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/UnaryTemperatureRequest.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/UnaryTemperatureRequestOrBuilder.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/UnaryTemperatureResponse.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/UnaryTemperatureResponseOrBuilder.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/temperatureProto.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/proto/humiditySensor.proto\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/proto/humiditySensor.proto\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/proto/temperatureSensor.proto\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/proto/temperatureSensor.proto\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2fHXc6mTnSpdgE5fVDigYeuBEPo\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.GreenHouseClient.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.HumiditySensorServer.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.TemperatureSensorServer.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9f38398b9061-18abd8497189-intellij.indexing.shared.core-IU-241.14494.240\" />\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-IU-241.14494.240\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1bbd2568-0184-47c8-810c-e60558882b9f\" name=\"Changes\" comment=\"\" />\r\n      <created>1713459055744</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1713459055744</updated>\r\n      <workItem from=\"1713459056813\" duration=\"7241000\" />\r\n      <workItem from=\"1713513348708\" duration=\"8681000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Pom\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713459147085</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713459147085</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Proto humiditySensor.proto\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713459316527</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713459316527</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"SERVER humiditySensorServer\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713460634842</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713460634842</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"CLIENT humiditySensor\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713461427191</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713461427191</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"PROTO temperatureSensor.proto\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713462446861</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713462446861</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"SERVER HumidityServer\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713464652414</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713464652414</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"SERVER HumidityServer\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713466226279</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713466226279</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"SERVER HumidityServer\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713466232205</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713466232205</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"SERVER HumidityServer\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713466242650</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713466242650</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"CLIENT\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713518770422</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713518770422</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"SERVER TemperatureSensorServer\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713518797289</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713518797289</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"SERVER HumiditySensorServer\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713518933949</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713518933949</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"PROTO fanStatus.proto\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1713520547377</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1713520547377</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"14\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Pom\" />\r\n    <MESSAGE value=\"Proto humiditySensor.proto\" />\r\n    <MESSAGE value=\"SERVER humiditySensorServer\" />\r\n    <MESSAGE value=\"CLIENT humiditySensor\" />\r\n    <MESSAGE value=\"PROTO temperatureSensor.proto\" />\r\n    <MESSAGE value=\"SERVER HumidityServer\" />\r\n    <MESSAGE value=\"CLIENT\" />\r\n    <MESSAGE value=\"SERVER TemperatureSensorServer\" />\r\n    <MESSAGE value=\"SERVER HumiditySensorServer\" />\r\n    <MESSAGE value=\"PROTO fanStatus.proto\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"PROTO fanStatus.proto\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/GreenHouseClient.java</url>\r\n          <line>27</line>\r\n          <option name=\"timeStamp\" value=\"4\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/GreenHouseClient.java</url>\r\n          <line>93</line>\r\n          <option name=\"timeStamp\" value=\"5\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision c633835427d782098621de776adee00214d54eff)
+++ b/.idea/workspace.xml	(date 1713529748697)
@@ -4,27 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="1bbd2568-0184-47c8-810c-e60558882b9f" name="Changes" comment="PROTO fanStatus.proto">
-      <change afterPath="$PROJECT_DIR$/src/main/java/FanStatusServer.java" afterDir="false" />
+    <list default="true" id="1bbd2568-0184-47c8-810c-e60558882b9f" name="Changes" comment="FAN Update (SERVER)">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/GreenHouseClient.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/GreenHouseClient.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/HumiditySensorServer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/HumiditySensorServer.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/TemperatureSensorServer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/TemperatureSensorServer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/grpc/humiditySensor/StreamHumidityRequest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/grpc/humiditySensor/StreamHumidityRequest.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/grpc/humiditySensor/StreamHumidityRequestOrBuilder.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/grpc/humiditySensor/StreamHumidityRequestOrBuilder.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/grpc/humiditySensor/humidityProto.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/grpc/humiditySensor/humidityProto.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/StreamTemperatureRequest.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/StreamTemperatureRequestOrBuilder.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/StreamTemperatureResponse.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/StreamTemperatureResponseOrBuilder.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/TemperatureSensorServiceGrpc.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/UnaryTemperatureRequest.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/UnaryTemperatureRequestOrBuilder.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/UnaryTemperatureResponse.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/UnaryTemperatureResponseOrBuilder.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/grpc/temperatureSensor/temperatureProto.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/proto/humiditySensor.proto" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/proto/humiditySensor.proto" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/proto/temperatureSensor.proto" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/proto/temperatureSensor.proto" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -52,6 +36,7 @@
   </component>
   <component name="PropertiesComponent">{
   &quot;keyToString&quot;: {
+    &quot;Application.FanStatusServer.executor&quot;: &quot;Run&quot;,
     &quot;Application.GreenHouseClient.executor&quot;: &quot;Run&quot;,
     &quot;Application.HumiditySensorServer.executor&quot;: &quot;Run&quot;,
     &quot;Application.TemperatureSensorServer.executor&quot;: &quot;Run&quot;,
@@ -89,7 +74,8 @@
       <option name="presentableId" value="Default" />
       <updated>1713459055744</updated>
       <workItem from="1713459056813" duration="7241000" />
-      <workItem from="1713513348708" duration="8681000" />
+      <workItem from="1713513348708" duration="12480000" />
+      <workItem from="1713526808519" duration="1059000" />
     </task>
     <task id="LOCAL-00001" summary="Pom">
       <option name="closed" value="true" />
@@ -195,7 +181,39 @@
       <option name="project" value="LOCAL" />
       <updated>1713520547377</updated>
     </task>
-    <option name="localTasksCounter" value="14" />
+    <task id="LOCAL-00014" summary="TEMPERATUR update veriables">
+      <option name="closed" value="true" />
+      <created>1713522800579</created>
+      <option name="number" value="00014" />
+      <option name="presentableId" value="LOCAL-00014" />
+      <option name="project" value="LOCAL" />
+      <updated>1713522800579</updated>
+    </task>
+    <task id="LOCAL-00015" summary="update Humidity">
+      <option name="closed" value="true" />
+      <created>1713522915636</created>
+      <option name="number" value="00015" />
+      <option name="presentableId" value="LOCAL-00015" />
+      <option name="project" value="LOCAL" />
+      <updated>1713522915636</updated>
+    </task>
+    <task id="LOCAL-00016" summary="FAN Update (PROTO)">
+      <option name="closed" value="true" />
+      <created>1713525715013</created>
+      <option name="number" value="00016" />
+      <option name="presentableId" value="LOCAL-00016" />
+      <option name="project" value="LOCAL" />
+      <updated>1713525715013</updated>
+    </task>
+    <task id="LOCAL-00017" summary="FAN Update (SERVER)">
+      <option name="closed" value="true" />
+      <created>1713525737185</created>
+      <option name="number" value="00017" />
+      <option name="presentableId" value="LOCAL-00017" />
+      <option name="project" value="LOCAL" />
+      <updated>1713525737185</updated>
+    </task>
+    <option name="localTasksCounter" value="18" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -223,20 +241,28 @@
     <MESSAGE value="SERVER TemperatureSensorServer" />
     <MESSAGE value="SERVER HumiditySensorServer" />
     <MESSAGE value="PROTO fanStatus.proto" />
-    <option name="LAST_COMMIT_MESSAGE" value="PROTO fanStatus.proto" />
+    <MESSAGE value="TEMPERATUR update veriables" />
+    <MESSAGE value="update Humidity" />
+    <MESSAGE value="FAN Update (PROTO)" />
+    <MESSAGE value="FAN Update (SERVER)" />
+    <option name="LAST_COMMIT_MESSAGE" value="FAN Update (SERVER)" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
       <breakpoints>
-        <line-breakpoint enabled="true" type="java-line">
+        <line-breakpoint enabled="true" type="java-method">
           <url>file://$PROJECT_DIR$/src/main/java/GreenHouseClient.java</url>
-          <line>27</line>
-          <option name="timeStamp" value="4" />
+          <line>90</line>
+          <properties class="GreenHouseClient" method="streamTemperatureRequest">
+            <option name="EMULATED" value="true" />
+            <option name="WATCH_EXIT" value="false" />
+          </properties>
+          <option name="timeStamp" value="1" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/src/main/java/GreenHouseClient.java</url>
-          <line>93</line>
-          <option name="timeStamp" value="5" />
+          <line>91</line>
+          <option name="timeStamp" value="2" />
         </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
